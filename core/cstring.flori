import "core/prelude"
import "core/pointer"
import "core/macros"
import "core/syntax"

fn strlen(cs ^cstring) ^int $[importc "strlen", header "string.h", importjs, patternjs "$1.length"]

fn char(c ^int) ^char $[importjs "string.fromcharcode"] {
  cast[^char](c)
}

macro c(s ^fstrlit) ^fexpr $[syntax] {
  len := strlen(strval(s))
  ch := if (len == 1) {
    strval(s)!0
  } elif (len == 2) {
    strval(s)!1
  } else {
    error(s, "char literal should be 1 length string.")
    char(0)
  }
  i := new_fintlit(cast[^int](ch))
  quote {
    char(`i)
  }
}
