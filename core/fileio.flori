
import core/prelude
import core/io
import core/string

type File $[importc "FILE*", header "stdio.h"]

fn fprintf(f File, cs CString) $[importc "fprintf", header "stdio.h"]
fn fopen(name CString, mode CString) File $[importc "fopen", header "stdio.h"]
fn fclose(f File) $[importc "fclose", header "stdio.h"]

fn stdin() $[importc, header "stdio.h", pattern "stdin"]
fn stdout() $[importc, header "stdio.h", pattern "stdout"]

fn destructor(f File) {
  println("File destroyed!")
  fclose(f)
}

fn write(f File, cs CString) {
  fprintf(f, cs)
}
fn write(f File, s String) {
  fprintf(f, cstring(s))
}

fn open_file(filename CString, mode CString) File {
  fopen(filename, mode)
}
fn write_file(filename CString, s CString) {
  f := open_file(filename, "w")
  write(f, s)
}
