defprimitive void 0
defprimitive int 8
defprimitive cstring 8

jit return(^int) ^int {
  X 0x58
  X 0x48; X 0x89; X 0xEC
  X 0x5D
  X 0xC3
}

jit add(^int, ^int) ^int {
  X 0x59
  X 0x58
  X 0x48; X 0x01; X 0xC8
  X 0x50
}

jit +(^int, ^int) ^int {
  X 0x59
  X 0x58
  X 0x48; X 0x01; X 0xC8
  X 0x50
}

jit +(^ptr int, ^ptr int) ^ptr int {
  X 0x59
  X 0x58
  X 0x48; X 0x01; X 0xC8
  X 0x50
}

jit -(^int, ^int) ^int {
  X 0x59
  X 0x58
  X 0x48; X 0x29; X 0xC8
  X 0x50
}

jit <(^int, ^int) ^int {
  X 0x59
  X 0x58
  X 0x48; X 0x39; X 0xC8
  X 0x0F; X 0x9C; X 0xC0
  X 0x0F; X 0xB6; X 0xC0
  X 0x50
}

fn copy(p ^ptr int, v ^int) {
  (deref p) = v
}

jit exit(^int) ^int {
  X 0xb8; X 1; X 0; X 0; X 0
  X 0x5b
  X 0xcd; X 0x80
}

jit sys_print(^cstring, ^int) ^int {
  X 0x48; X 0xc7; X 0xc0; X 0x01; X 0x00; X 0x00; X 0x00
  X 0x48; X 0xc7; X 0xc7; X 0x01; X 0x00; X 0x00; X 0x00
  X 0x5a
  X 0x5e
  X 0x0f; X 0x05
}