
(defprotocol All)

@(^ :a All)
(defprotocol Seqable
  (push (: Self :a))
  (nth (: Self Size -> :a))
  (len (: Self -> Size)))

(c-type UInt8 :name "uint8_t" :header "stdint.h")
(c-type Int32 :name "int32_t" :header "stdint.h")
(c-type Int64 :name "int64_t" :header "stdint.h")
(c-type Float32 :name "float32_t" :header "stdint.h")
(c-type Float64 :name "float64_t" :header "stdint.h")
(c-type Bool :name "bool" :header "stdbool.h")
(c-type Size :name "size_t" :header "stdlib.h")
(c-type CString :name "char*" :nodecl)
(c-type CInt :name "int" :nodecl)
(c-type Pointer :name "void*" :nodecl)

@unsafe
@(^ :a All)
@(: [Ptr :a] Size -> :a)
(defn nth [ptr index]
  (c-emit "(($#)$#)[$#]" :a ptr index))

@unsafe
@(: Size)
(c-import alloc :name "malloc" :header "stdlib.h")
@unsafe
@(: Pointer)
(c-import realloc :name "realloc" :header "stdlib.h")
@unsafe
@(: Pointer)
(c-import dealloc :name "free" :header "stdlib.h")

@unsafe
@(: Pointer Pointer Size)
(c-import memcpy :name "memcpy" :header "string.h")

@unsafe
@(: CString -> CInt)
(c-import strlen :name "strlen" :header "string.h")
