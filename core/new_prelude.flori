defprimitive void 0
defprimitive int 8
defprimitive cstring 8
defprimitive char 1
defprimitive pointer 8
defprimitive fexpr 8
defprimitive bool 8

inline fn push_rax() {
  X(0x50)
}

inline fn pop_rax() {
  X(0x58)
}
inline fn pop_rcx() {
  X(0x59)
}
inline fn pop_rdx() {
  X(0x5a)
}
inline fn pop_rbp() {
  X(0x5d)
}
inline fn pop_rsi() {
  X(0x5e)
}
inline fn pop_rdi() {
  X(0x5f)
}
inline fn pop_r8() {
  X(0x41) X(0x58)
}
inline fn pop_r9() {
  X(0x41) X(0x59)
}

inline fn cmp_rax_rcx() {
  X(0x48) X(0x39) X(0xC8)
}

inline fn opret() {
  X(0xc3)
}

inline fn genret() {
  pop_rax()
  X(0x48) X(0x89) X(0xec)
  pop_rbp()
  opret()
}
inline fn return(r ^int) {genret()}
inline fn return(r ^cstring) {genret()}
inline fn return(r ^bool) {genret()}

inline fn genadd() {
  pop_rcx() pop_rax()
  X(0x48) X(0x01) X(0xC8)
  push_rax()
}
inline fn +(a ^int, b ^int) ^int {genadd()}
inline fn +(a ^ptr int, b ^int) ^ptr int {genadd()}
inline fn +(a ^ptr char, b ^int) ^ptr char {genadd()}

inline fn gensub() {
  pop_rcx() pop_rax()
  X(0x48) X(0x29) X(0xC8)
  push_rax()
}
inline fn -(a ^int, b ^int) ^int {gensub()}
inline fn -(a ^ptr int, b ^int) ^ptr int {gensub()}
inline fn -(a ^ptr char, b ^int) ^ptr char {gensub()}

inline fn <(a ^int, b ^int) ^bool {
  pop_rcx() pop_rax()
  cmp_rax_rcx()
  X(0x48) X(0xc7) X(0xc0) X(0x00) X(0x00) X(0x00) X(0x00)
  X(0x0F) X(0x9C) X(0xC0)
  push_rax()
}

inline fn geneq() {
  pop_rcx() pop_rax()
  cmp_rax_rcx()
  X(0x48) X(0xc7) X(0xc0) X(0x00) X(0x00) X(0x00) X(0x00) # mov rax, 0
  X(0x0F) X(0x94) X(0xC0) # sete al
  push_rax
}
inline fn ==(^int, ^int) ^bool geneq
inline fn ==(^char, ^char) ^bool geneq

inline fn *(p ^ptr int) ^int {
  pop_rax()
  X(0x48) X(0x8b) X(0x00)
  push_rax()
}
inline fn *lvalue(p ^ptr int) ^ptr int {}