
import "core/prelude"
import "core/macros"
import "core/syntax"

fn printf[T](fmt CString, x T) $[importc "printf", header "stdio.h", importjs, patternjs "console.log($2)"]

fn print(x Char) $[inline] {
  printf("%c", x)
}
fn print(cs CString) $[inline] {
  printf("%s", cs)
}
fn print(x Int) $[inline] {
  printf("%lld", x)
}
fn print(x UInt8) $[inline] {
  printf("%d", x)
}
fn print(x UInt32) $[inline] {
  printf("%d", x)
}
fn print(x Float) $[inline] {
  printf("%f", x)
}
fn print(x Bool) {
  if (x) {
    print("true")
  } else {
    print("false")
  }
}

macro println(args FList) FExpr $[syntax] {
  ret := new_fblock()
  for son in args {
    push(ret, quote {
        print(`son)
      })
  }
  push(ret, quote {
      print("\n")
    })
  ret
}
