PROT_READ := 0x1
PROT_WRITE := 0x2
PROT_EXEC := 0x4
PROT_NONE := 0x0

MAP_SHARED := 0x01
MAP_PRIVATE := 0x02
MAP_ANONYMOUS := 0x20

fn brk(addr ^int) ^int {
  syscall(12, addr)
}

fn sbrk(inc ^int) ^ptr int {
  oldaddr := brk(0)
  newaddr := oldaddr + inc
  newaddr = newaddr + 8 - mod(newaddr, 8)
  brk(newaddr)
  return oldaddr
}

fn mmap(addr ^int, len ^int, prot ^int, flags ^int, fd ^int, offset ^int) ^pointer {
  return cast_pointer(syscall(9, addr, len, prot, flags, fd, offset))
}

fn alloc_chunk(size ^int) ^pointer {
  return mmap(0, size, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 0, 0)
}

memchunk := alloc_chunk(4096 * 2)
memchunkpos := 0

fn malloc(size ^int) ^pointer {
  retp := memchunk + memchunkpos
  memchunkpos = memchunkpos + size
  return retp
}