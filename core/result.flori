
@(^ (:a All) (:b All))
(defprotocol Resultable
  (unwrap (: :a -> :b)))

@(^ :a All)
(defprotocol ErrorValue
  (debug (: :a -> String))
  (panic (: :a)))

@(^ (:a All))
(defenum Option
  (Some :a)
  None)

@(^ (:a All) (:b ErrorValue))
(defenum Result
  (Ok :a)
  (Error :b))

@(^ :a All)
@(: (Option :a) -> :a)
(defn unwrap [option]
  (match option
    [(some value) value]
    [none (panic)]))

@(^ :a All :b ErrorType)
@(: (Result :a :b) -> :a)
(defn unwrap [result]
  (match result
    [(ok value) value]
    [(error err) (panic err)]))
