
import core/prelude
import core/pointer
import core/io

fn strlen(cs CString) Int $[importc "strlen", header "string.h"]

type String {
  p Ptr[Char]
  len Int
}

fn string(cs CString) String {
  s := init(String){alloc[Char](strlen(cs) + 1); strlen(cs)}
  memcpy(s.p, cast[Ptr[Char]](cs), strlen(cs))
  s
}

fn length(s String) Int {
  s.len
}

fn push(dest String, src String) {
  len := length(dest) + length(src)
  (dest.p) = realloc[Char](dest.p, len + 1)
  memcpy((dest.p) +! length(dest), src.p, length(src))
  (dest.len) = len
}

fn print(s String) {
  print(cast[CString](s.p))
}
