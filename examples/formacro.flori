
import "core/prelude"
import "core/io"
import "core/macros"

macro for(fexpr FExpr) FExpr {
  if ((length(fexpr) != 5) && (length(fexpr) != 6)) {
    error(fexpr, "expect syntax: for e in iter() {...}")
  }
  
  elem := get(fexpr, 1)
  in := get(fexpr, 2)
  if (to_cs(in) != "in") {
    error(fexpr, "for-macro expect `in keyword.")
  }

  itername := get(fexpr, 3)
  iterargs := if (length(fexpr) == 6) {
    get(fexpr, 4)
  } else {
    new_flist()
  }
  body := if (length(fexpr) == 6) {
    get(fexpr, 5)
  } else {
    get(fexpr, 4)
  }

  quote {
    `itername `iterargs `elem `body
  }
}

macro range(fexpr FExpr) FExpr {
  if (length(fexpr) < 4) {
    error(fexpr, "expect syntax: range(s, e) i {...}")
  }
  args := get(fexpr, 1)
  if (length(args) < 2) {
    error(fexpr, "range: require 2 arguments")
  }
  start := get(args, 0)
  end := get(args, 1)
  elem := get(fexpr, 2)
  body := get(fexpr, 3)

  quote {
    `elem := `start
    while (`elem <= `end) {
      `body
      `elem += 1
    }
  }
}

for i in range(1, 10) {
  print(i)
}
