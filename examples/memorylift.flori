
struct Vec[T] {
  p Ptr![:a]
  len Int32
}

fn new_vec(T Typedesc, len Int32) Vec![T] {
  Vec(alloc(sizeof(T)*len), len)
}

fn `!=[T](vec &Vec![T], index Int32, value T) {
  vec.p!index = value
}

fn push[T](vec &Vec![T], value T) {
  vec.p = realloc(vec.p, sizeof(T)*(vec.len+1))
  vec!(vec.len-1) = value
  vec.len += 1
}

fn main() {
  var top = new_vec(Int32, 1)
  top!0 = 9
  for i in 0..5 {
    v := new_vec(Int32, 1)
    v!0 = 9
    push(v, 10)
    push(v, top!0)
    top = v
  }
}

main()

# (vec 9 10)
