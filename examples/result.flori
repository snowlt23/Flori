
(ns flori.core.result)

(defprotocol All)

@(^ :a All)
(defprotocol Resultable
  (unwrap (: Self -> :a)))

(defprotocol ErrorValue
  (debug (: Self -> String))
  (panic (: Self)))

@(^ :a All)
(defenum Option
  (some :a)
  none)

@(^ :a All :b ErrorValue)
(defenum Result
  (ok :a)
  (error :b))

@(^ :a All)
@(: (Option :a) -> :a)
(defn unwrap [option]
  (match option
    [(some value) value]
    [none (panic)]))

@(: (Option Int32) -> Int32)
(defn unwrap-int [option]
  (match option
    [(some value) value]
    [none (panic)]))

@(^ :a All :b ErrorType)
@(: (Result :a :b) -> :a)
(defn unwrap [result]
  (match result
    [(ok value) value]
    [(error err) (panic err)]))

@(: (Result Int32) -> Int32)
(defn unwrap-int [result]
  (match result
    [(ok value) value]
    [(error err) (panic err)]))
