
type Void $[importc: "void", header: nodeclc]
type Bool $[importc: "bool", header: "stdbool.h"]
type CString $[importc: "char*", header: nodeclc]
type Int $[importc: "int64_t", header: "stdint.h"]
type Int32 $[importc: "int32_t", header: "stdint.h"]
type Int64 $[importc: "int64_t", header: "stdint.h"]

fn `+(a Int, b Int) Int $[importc: "+", header: nodeclc, pattern: infixc]
fn `-(a Int, b Int) Int $[importc: "-", header: nodeclc, pattern: infixc]
fn `<(a Int, b Int) Int $[importc: "<", header: nodeclc, pattern: infixc]
fn printf(fmt CString, value Int) $[importc: "printf", header: "stdio.h"]

fn fib(n Int) Int {
  if (n < 2) {
    n
  } else {
    fib(n-1) + fib(n-2)
  }
}

printf("%d\n", fib(38))
