
import prelude

struct Vec[T]:
  data Ptr[T]
  len Int32
enum Option[T]:
  Some T
  None

protocol Num[T]:
  def `+`(T, T) -> T
  def `-`(T, T) -> T
protocol Addable[T]:
  def `+`(T, T) -> T
protocol ToStr[T]:
  def str(T, T) -> String
protocol Eq[T]:
  def `==`(T, T) -> Bool

@hook(Eq)
macro neq-hook(t):
  quote:
    def `!=`(a, b):
      not a == b

def add5(x Int32) Int32:
  x + 5
def add5(x String) String:
  $x & "5"
