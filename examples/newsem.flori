
(c-type Void :name "void" :nodecl)
(c-type CString :name "char*" :nodecl)
(c-type Int32 :name "int32_t" :header "stdint.h")
(c-type Bool :name "bool" :header "stdbool.h")

@(importc :namd "void")
(deftype Void [])
@(importc :name "char*")
(deftype CString [])
@(importc :name "int32_t" :header "stdint.h")
(deftype Int32 [])
@(importc :name "bool" :header "stdbool.h")
(deftype Bool [])

@(importc :pattern "$1+$2")
(defn + [a Int32 b Int32] Int32)
@(importc :pattern "$1-$2")
(defn - [a Int32 b Int32] Int32)
@(importc :pattern "$1<$2")
(defn < [a Int32 b Int32] Int32)
@(importc :header "stdio.h")
(defn printf [fmt CString value :a])

@(importc :pattern "($1)$2")
(defn cast [T Typedesc value T])

(defn fib [n Int32] Int32
  (if (< n 2)
    n
    (+ (fib (- n 1)) (fib (- n 2)))))

(deftype Vec {:a All}
  :p :a
  :len Int32)

(defn nth {:a All} [v (Vec :a) i Int32]
  (nth v:p i))

(printf "%d\n" (fib 38))
