
(c-type Int32 :name "int32_t" :header "stdint.h")
(c-type Float32 :name "float" :nodecl)

@(: Int32 Int32 -> Int32)
(c-func + :infix :nodecl)
@(: Float32 Float32 -> Float32)
(c-func + :infix :nodecl)
@(: CString :a)
(c-func printf :nodecl)

@(: Int32)
(defn print [x]
  (printf "%d" x))
@(: Float32)
(defn print [x]
  (printf "%f" x))
@(: CString)
(defn print [s]
  (printf "%s" s))

(defn println [x]
  (print x)
  (print "\n"))

(defn add5 [x]
  (+ x 5))

@(: String -> String)
(defn add5 [x]
  (concat x "5"))

(defn fib [n]
  (if (< n 2)
      n
      (+ (fib (- n 1))
         (fib (- n 2)))))

(println (add5 4))
(println (fib 38))
